[project]
name = "whoisbuilding"
version = "1.0.0"
description = "An interactive web platform for CS students to showcase and collaborate on projects"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "sqlalchemy>=2.0.25",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "alembic>=1.13.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.7",
    "psycopg2-binary>=2.9.9",
    "python-dotenv>=1.0.0",
    "email-validator>=2.1.0.post1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.26.0",
    "ruff>=0.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py39"
line-length = 88

# Enable all rules by default, then configure specific rules below
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "RUF",  # ruff-specific rules
    "D",    # pydocstyle
    "S",    # flake8-bandit
]

ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D103"]  # Allow assert statements and missing docstrings in tests
"alembic/*" = ["D"]  # Ignore docstring rules in migrations

[tool.ruff.isort]
known-first-party = ["app"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=app --cov-report=term-missing"
testpaths = ["tests"]
